[versions]
logback = "6.6" # https://search.maven.org/artifact/net.logstash.logback/logstash-logback-encoder
kotlin-logging = "2.0.11" # https://search.maven.org/artifact/io.github.microutils/kotlin-logging-jvm
jackson = "2.13.0" # https://search.maven.org/artifact/com.fasterxml.jackson.core/jackson-core
junit-jupiter = "5.8.1" # https://search.maven.org/artifact/org.junit.jupiter/junit-jupiter-api
guava = "31.0.1-jre" # https://search.maven.org/artifact/com.google.guava/guava
commons-codec = "1.15" # https://search.maven.org/artifact/commons-codec/commons-codec
problem = "0.26.0" # https://search.maven.org/artifact/org.zalando/problem
problem-spring = "0.27.0" # https://search.maven.org/artifact/org.zalando/problem-spring-webflux
springdoc = "1.5.11" # https://search.maven.org/artifact/org.springdoc/springdoc-openapi
postgresql = "42.2.24" # https://search.maven.org/artifact/org.postgresql/postgresql
kotest = "4.6.3" # https://search.maven.org/artifact/io.kotest/kotest-runner-junit5
kotest-spring = "1.0.1" # https://search.maven.org/artifact/io.kotest.extensions/kotest-extensions-spring
mockk = "1.12.0" # https://search.maven.org/artifact/io.mockk/mockk
springmockk = "3.0.1" # https://search.maven.org/artifact/com.ninja-squad/springmockk
kotlin-coroutines = "1.5.2" # https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core-jvm
exposed = "0.35.3" # https://search.maven.org/artifact/org.jetbrains.exposed/exposed-bom

spring-boot = "2.5.5" # https://search.maven.org/artifact/org.springframework.boot/spring-boot
spring-depman = "1.0.11.RELEASE" # https://plugins.gradle.org/plugin/io.spring.dependency-management
kotlin = "1.5.31" # https://plugins.gradle.org/plugin/org.jetbrains.kotlin.jvm
indra = "2.0.6" # https://plugins.gradle.org/plugin/net.kyori.indra
gradle-test-logger = "3.0.0" # https://plugins.gradle.org/plugin/com.adarshr.test-logger

[libraries]
# Kotlin dependencies
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlin-coroutines" }
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlin-coroutines" }

# Spring dependencies
# Use spring-boot-dependencies for versions.
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-undertow = { module = "org.springframework.boot:spring-boot-starter-undertow" }
spring-boot-starter-testing = { module = "org.springframework.boot:spring-boot-starter-test" }

logback = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logback" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging" }

jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-spring" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-spring = { module = "com.ninja-squad:springmockk", version.ref = "springmockk" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }
apache-commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }

problem = { module = "org.zalando:problem", version.ref = "problem" }
problem-jackson = { module = "org.zalando:jackson-datatype-problem", version.ref = "problem" }
problem-spring = { module = "org.zalando:problem-spring-webflux", version.ref = "problem-spring" }

springdoc-webflux = { module = "org.springdoc:springdoc-openapi-webflux-ui", version.ref = "springdoc" }
springdoc-kotlin = { module = "org.springdoc:springdoc-openapi-kotlin", version.ref = "springdoc" }

exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-spring = { module = "org.jetbrains.exposed:exposed-spring-boot-starter", version.ref = "exposed" }
exposed-javatime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
flyway = { module = "org.flywaydb:flyway-core" } # Spring platform
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

[bundles]
spring = [
  "spring-boot-starter-webflux",
  "spring-boot-starter-actuator",
  "spring-boot-starter-data-jpa",
  "spring-boot-starter-security",
  "spring-boot-starter-cache",
  "spring-boot-starter-validation",
  "spring-boot-starter-undertow",
]
testing-api = [
  "junit-jupiter-api",
  "junit-jupiter-params",
  "kotest-runner",
  "kotest-spring",
  "mockk",
  "mockk-spring",
  "spring-boot-starter-testing",
]
testing-runtime = ["junit-jupiter-engine"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-depman = { id = "io.spring.dependency-management", version.ref = "spring-depman" }
kotlin-lang = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
indra = { id = "net.kyori.indra", version.ref = "indra" }
test-logger = { id = "com.adarshr.test-logger", version.ref = "gradle-test-logger" }
